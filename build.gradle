buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1+', changing: true
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '4.0.4'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.5.1'
group = 'com.talhanation.recruits'
archivesBaseName = 'recruits-1.16.5'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=recruits.general.mixin.json"//////////////////////////
            Random rnd = new Random()
            //args = ['--username', 'Player' + rnd.nextInt(1000)]

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=recruits.general.mixin.json"//////////////////////////

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
             args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "henkelmax.public"
        url = 'https://maven.maxhenkel.de/repository/public'
    }
    mavenLocal()
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'
    shadow fg.deobf("de.maxhenkel.corelib:corelib:1.16.5-1.0.5:api")
    runtimeOnly fg.deobf("de.maxhenkel.corelib:corelib:1.16.5-1.0.5")
    runtimeOnly fg.deobf("de.maxhenkel.corelib:corelib:1.16.5-1.0.5:javadoc")

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

mixin {
    add sourceSets.main, "recruits.general.mixin-refmap.json"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "examplemod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
        rename 'mixin.refmap.json', 'recruits.mixin-refmap.json'
    }
}


artifacts {
    archives shadowJar
}

jar.finalizedBy('reobfJar')

shadowJar {
    project.configurations.shadow.setTransitive(true);
    configurations = [project.configurations.shadow]
    classifier = ""
    relocate 'de.maxhenkel.corelib', "de.maxhenkel.recruits.corelib"
}

reobf {
    shadowJar {}
}

